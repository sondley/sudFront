{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/grandsud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CATEGORIES, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL, CREATE_CATEGORY, CREATE_CATEGORY_SUCCESS, CREATE_CATEGORY_FAIL, MODIFY_CATEGORY, MODIFY_CATEGORY_SUCCESS, MODIFY_CATEGORY_FAIL, DELETE_CATEGORY, DELETE_CATEGORY_SUCCESS, DELETE_CATEGORY_FAIL } from \"../actions/category\";\nexport default function category() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    categories: [],\n    isFetching: false,\n    error: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case CREATE_CATEGORY:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case MODIFY_CATEGORY:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case DELETE_CATEGORY:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case GET_CATEGORIES_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        categories: action.categories\n      });\n\n    case CREATE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        categories: state.categories.concat(action.category)\n      });\n\n    case MODIFY_CATEGORY_SUCCESS:\n      var array = state.categories.map(function (category) {\n        if (category.id !== action.category.id) {\n          return category;\n        }\n\n        return _objectSpread({}, category, action.category);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        categories: array\n      });\n\n    case DELETE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        categories: state.categories.filter(function (_ref) {\n          var id = _ref.id;\n          return id !== action.id;\n        })\n      });\n\n    case GET_CATEGORIES_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case CREATE_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case MODIFY_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case DELETE_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/reducers/category.js"],"names":["GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","CREATE_CATEGORY","CREATE_CATEGORY_SUCCESS","CREATE_CATEGORY_FAIL","MODIFY_CATEGORY","MODIFY_CATEGORY_SUCCESS","MODIFY_CATEGORY_FAIL","DELETE_CATEGORY","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAIL","category","state","categories","isFetching","error","action","type","concat","array","map","id","filter"],"mappings":";AAAA,SACAA,cADA,EAEAC,sBAFA,EAGAC,mBAHA,EAIAC,eAJA,EAKAC,uBALA,EAMAC,oBANA,EAOAC,eAPA,EAQAC,uBARA,EASAC,oBATA,EAUAC,eAVA,EAWAC,uBAXA,EAYAC,oBAZA,QAaO,qBAbP;AAeA,eAAe,SAASC,QAAT,GAGb;AAAA,MAFAC,KAEA,uEAFQ;AAAEC,IAAAA,UAAU,EAAE,EAAd;AAAkBC,IAAAA,UAAU,EAAE,KAA9B;AAAqCC,IAAAA,KAAK,EAAE;AAA5C,GAER;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,cAAL;AACE,+BAAYa,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKZ,eAAL;AACE,+BAAYU,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKT,eAAL;AACE,+BAAYO,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKN,eAAL;AACE,+BAAYI,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AAEF,SAAKd,sBAAL;AACE,+BAAYY,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAAzD;;AACF,SAAKV,uBAAL;AACE,+BAAYS,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBK,MAAjB,CAAwBF,MAAM,CAACL,QAA/B;AAAlD;;AACF,SAAKL,uBAAL;AACE,UAAMa,KAAK,GAAGP,KAAK,CAACC,UAAN,CAAiBO,GAAjB,CAAqB,UAAAT,QAAQ,EAAI;AAC7C,YAAIA,QAAQ,CAACU,EAAT,KAAgBL,MAAM,CAACL,QAAP,CAAgBU,EAApC,EAAwC;AAAE,iBAAOV,QAAP;AAAkB;;AAC5D,iCAAYA,QAAZ,EAAyBK,MAAM,CAACL,QAAhC;AACD,OAHa,CAAd;AAIA,+BAAYC,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,UAAU,EAAEM;AAAlD;;AACF,SAAKV,uBAAL;AACE,+BAAYG,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBS,MAAjB,CAAwB;AAAA,cAAGD,EAAH,QAAGA,EAAH;AAAA,iBAAYA,EAAE,KAAKL,MAAM,CAACK,EAA1B;AAAA,SAAxB;AAAlD;;AAEF,SAAKpB,mBAAL;AACE,+BAAYW,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEC,MAAM,CAACD;AAApD;;AACF,SAAKX,oBAAL;AACE,+BAAYQ,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEC,MAAM,CAACD;AAApD;;AACF,SAAKR,oBAAL;AACE,+BAAYK,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEC,MAAM,CAACD;AAApD;;AACF,SAAKL,oBAAL;AACE,+BAAYE,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEC,MAAM,CAACD;AAApD;;AAEF;AACE,aAAOH,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\nGET_CATEGORIES,\nGET_CATEGORIES_SUCCESS,\nGET_CATEGORIES_FAIL,\nCREATE_CATEGORY,\nCREATE_CATEGORY_SUCCESS,\nCREATE_CATEGORY_FAIL,\nMODIFY_CATEGORY,\nMODIFY_CATEGORY_SUCCESS,\nMODIFY_CATEGORY_FAIL,\nDELETE_CATEGORY,\nDELETE_CATEGORY_SUCCESS,\nDELETE_CATEGORY_FAIL\n} from \"../actions/category\";\n\nexport default function category(\n  state = { categories: [], isFetching: false, error: null },\n  action\n) {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return { ...state, isFetching: true };\n    case CREATE_CATEGORY:\n      return { ...state, isFetching: true };\n    case MODIFY_CATEGORY:\n      return { ...state, isFetching: true };\n    case DELETE_CATEGORY:\n      return { ...state, isFetching: true };\n\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state, isFetching: false, categories: action.categories };\n    case CREATE_CATEGORY_SUCCESS:\n      return { ...state, isFetching: false, categories: state.categories.concat(action.category) };\n    case MODIFY_CATEGORY_SUCCESS:\n      const array = state.categories.map(category => {\n        if (category.id !== action.category.id) { return category; }\n        return { ...category, ...action.category };\n      });\n      return { ...state, isFetching: false, categories: array };\n    case DELETE_CATEGORY_SUCCESS:\n      return { ...state, isFetching: false, categories: state.categories.filter(({ id }) => id !== action.id) };\n\n    case GET_CATEGORIES_FAIL:\n      return { ...state, isFetching: false, error: action.error };\n    case CREATE_CATEGORY_FAIL:\n      return { ...state, isFetching: false, error: action.error };\n    case MODIFY_CATEGORY_FAIL:\n      return { ...state, isFetching: false, error: action.error };\n    case DELETE_CATEGORY_FAIL:\n      return { ...state, isFetching: false, error: action.error };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}