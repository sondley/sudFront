{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/grandsud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGOUT, LOGIN, LOGIN_SUCCESS, LOGIN_FAIL, LOGGED_USER, LOGGED_USER_SUCCESS, LOGGED_USER_FAIL, REFRESH_TOKEN, REFRESH_TOKEN_SUCCESS, REFRESH_TOKEN_FAIL, GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAIL // CREATE_USER,\n// CREATE_USER_SUCCESS,\n// CREATE_USER_FAIL,\n// MODIFY_USER,\n// MODIFY_USER_SUCCESS,\n// MODIFY_USER_FAIL,\n// DELETE_USER,\n// DELETE_USER_SUCCESS,\n// DELETE_USER_FAIL\n} from \"../actions/user\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nexport default function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    authedUser: undefined,\n    users: [],\n    token: null,\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n  var message;\n\n  switch (type) {\n    //Login\n    case LOGIN:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case LOGIN_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        authedUser: payload.user,\n        token: payload.token,\n        error: false,\n        message: message\n      });\n\n    case LOGIN_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Logout\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        authedUser: null,\n        token: null,\n        error: false\n      });\n    //Check if already Logged In\n\n    case LOGGED_USER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case LOGGED_USER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        authedUser: payload.user,\n        token: payload.token,\n        error: false,\n        message: message\n      });\n\n    case LOGGED_USER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        authedUser: null,\n        token: null,\n        error: false,\n        message: message\n      });\n    //Refresh Token (Keep Session Alive)\n\n    case REFRESH_TOKEN:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case REFRESH_TOKEN_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        token: payload.token,\n        error: false,\n        message: message\n      });\n\n    case REFRESH_TOKEN_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Get Users\n\n    case GET_USERS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_USERS_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        users: payload.user,\n        error: false,\n        message: message\n      });\n\n    case GET_USERS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Reset Errors\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/reducers/user.js"],"names":["LOGOUT","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","LOGGED_USER","LOGGED_USER_SUCCESS","LOGGED_USER_FAIL","REFRESH_TOKEN","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAIL","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAIL","RESET_ERRORS","user","state","authedUser","undefined","users","token","isFetching","message","error","action","type","payload","concat"],"mappings":"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","sourcesContent":["import {\n\tLOGOUT,\n\tLOGIN,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGGED_USER,\n\tLOGGED_USER_SUCCESS,\n\tLOGGED_USER_FAIL,\n\tREFRESH_TOKEN,\n\tREFRESH_TOKEN_SUCCESS,\n\tREFRESH_TOKEN_FAIL,\n\tGET_USERS,\n\tGET_USERS_SUCCESS,\n\tGET_USERS_FAIL\n\t// CREATE_USER,\n\t// CREATE_USER_SUCCESS,\n\t// CREATE_USER_FAIL,\n\t// MODIFY_USER,\n\t// MODIFY_USER_SUCCESS,\n\t// MODIFY_USER_FAIL,\n\t// DELETE_USER,\n\t// DELETE_USER_SUCCESS,\n\t// DELETE_USER_FAIL\n} from \"../actions/user\";\nimport { RESET_ERRORS } from \"../actions/utils\";\n\nexport default function user(\n\tstate = { authedUser: undefined, users: [], token: null, isFetching: false, message: [], error: false },\n\taction\n) {\n\tconst { type, payload } = action;\n\tlet message;\n\tswitch (type) {\n\t\t//Login\n\t\tcase LOGIN:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase LOGIN_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, authedUser: payload.user, token: payload.token, error: false, message };\n\t\tcase LOGIN_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Logout\n\t\tcase LOGOUT:\n\t\t\treturn { ...state, isFetching: false, authedUser: null, token: null, error: false };\n\n\t\t//Check if already Logged In\n\t\tcase LOGGED_USER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase LOGGED_USER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, authedUser: payload.user, token: payload.token, error: false, message };\n\t\tcase LOGGED_USER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, authedUser: null, token: null, error: false, message };\n\n\t\t//Refresh Token (Keep Session Alive)\n\t\tcase REFRESH_TOKEN:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase REFRESH_TOKEN_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, token: payload.token, error: false, message };\n\n\t\tcase REFRESH_TOKEN_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Get Users\n\t\tcase GET_USERS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase GET_USERS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, users: payload.user, error: false, message };\n\t\tcase GET_USERS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Reset Errors\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}