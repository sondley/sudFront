{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_DEBTS_CLIENT, GET_DEBTS_CLIENT_SUCCESS, GET_DEBTS_CLIENT_FAIL, GET_DEBTS_PROVIDER, GET_DEBTS_PROVIDER_SUCCESS, GET_DEBTS_PROVIDER_FAIL, MODIFY_DEBT_CLIENT, MODIFY_DEBT_CLIENT_SUCCESS, MODIFY_DEBT_CLIENT_FAIL, MODIFY_DEBT_PROVIDER, MODIFY_DEBT_PROVIDER_SUCCESS, MODIFY_DEBT_PROVIDER_FAIL } from \"../actions/debt\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\nexport default function debt() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    debtClient: [],\n    debtProvider: [],\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n  var sortedArray;\n  var debtClient;\n  var debtProvider;\n\n  switch (type) {\n    case GET_DEBTS_CLIENT:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_DEBTS_PROVIDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case MODIFY_DEBT_CLIENT:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case MODIFY_DEBT_PROVIDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_DEBTS_CLIENT_SUCCESS:\n      message = [].concat(payload.message);\n      sortedArray = sortBy(payload.data, [\"created\"]).reverse();\n      debtClient = sortedArray.filter(function (_ref) {\n        var quantite = _ref.quantite;\n        return quantite > 0;\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        debtClient: debtClient,\n        error: false,\n        message: message\n      });\n\n    case GET_DEBTS_PROVIDER_SUCCESS:\n      message = [].concat(payload.message);\n      sortedArray = sortBy(payload.data, [\"created\"]).reverse();\n      debtProvider = sortedArray.filter(function (_ref2) {\n        var quantite = _ref2.quantite;\n        return quantite > 0;\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        debtProvider: debtProvider,\n        error: false,\n        message: message\n      });\n\n    case MODIFY_DEBT_CLIENT_SUCCESS:\n      message = [].concat(payload.message);\n      var array = state.debtClient.map(function (debt) {\n        if (debt._id !== payload.data._id) {\n          return debt;\n        }\n\n        return _objectSpread({}, debt, payload.data);\n      });\n      debtClient = array.filter(function (_ref3) {\n        var quantite = _ref3.quantite;\n        return quantite > 0;\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        debtClient: debtClient,\n        error: false,\n        message: message\n      });\n\n    case MODIFY_DEBT_PROVIDER_SUCCESS:\n      message = [].concat(payload.message);\n      var array2 = state.debtProvider.map(function (debt) {\n        if (debt._id !== payload.data._id) {\n          return debt;\n        }\n\n        return _objectSpread({}, debt, payload.data);\n      });\n      debtProvider = array2.filter(function (_ref4) {\n        var quantite = _ref4.quantite;\n        return quantite > 0;\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        debtProvider: debtProvider,\n        error: false,\n        message: message\n      });\n\n    case GET_DEBTS_CLIENT_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case GET_DEBTS_PROVIDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case MODIFY_DEBT_CLIENT_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case MODIFY_DEBT_PROVIDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/sudFront/src/redux/reducers/debt.js"],"names":["GET_DEBTS_CLIENT","GET_DEBTS_CLIENT_SUCCESS","GET_DEBTS_CLIENT_FAIL","GET_DEBTS_PROVIDER","GET_DEBTS_PROVIDER_SUCCESS","GET_DEBTS_PROVIDER_FAIL","MODIFY_DEBT_CLIENT","MODIFY_DEBT_CLIENT_SUCCESS","MODIFY_DEBT_CLIENT_FAIL","MODIFY_DEBT_PROVIDER","MODIFY_DEBT_PROVIDER_SUCCESS","MODIFY_DEBT_PROVIDER_FAIL","RESET_ERRORS","sortBy","debt","state","debtClient","debtProvider","isFetching","message","error","action","payload","type","sortedArray","concat","data","reverse","filter","quantite","array","map","_id","array2"],"mappings":"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","sourcesContent":["import {\n\tGET_DEBTS_CLIENT,\n\tGET_DEBTS_CLIENT_SUCCESS,\n\tGET_DEBTS_CLIENT_FAIL,\n\tGET_DEBTS_PROVIDER,\n\tGET_DEBTS_PROVIDER_SUCCESS,\n\tGET_DEBTS_PROVIDER_FAIL,\n\tMODIFY_DEBT_CLIENT,\n\tMODIFY_DEBT_CLIENT_SUCCESS,\n\tMODIFY_DEBT_CLIENT_FAIL,\n\tMODIFY_DEBT_PROVIDER,\n\tMODIFY_DEBT_PROVIDER_SUCCESS,\n\tMODIFY_DEBT_PROVIDER_FAIL\n} from \"../actions/debt\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\n\nexport default function debt(\n\tstate = { debtClient: [], debtProvider: [], isFetching: false, message: [], error: false },\n\taction\n) {\n\tconst { payload, type } = action;\n\tlet message;\n\tlet sortedArray;\n\tlet debtClient;\n\tlet debtProvider;\n\tswitch (type) {\n\t\tcase GET_DEBTS_CLIENT:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase GET_DEBTS_PROVIDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase MODIFY_DEBT_CLIENT:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase MODIFY_DEBT_PROVIDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_DEBTS_CLIENT_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tsortedArray = sortBy(payload.data, [\"created\"]).reverse();\n\t\t\tdebtClient = sortedArray.filter(({ quantite }) => {\n\t\t\t\treturn quantite > 0;\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, debtClient, error: false, message };\n\t\tcase GET_DEBTS_PROVIDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tsortedArray = sortBy(payload.data, [\"created\"]).reverse();\n\t\t\tdebtProvider = sortedArray.filter(({ quantite }) => {\n\t\t\t\treturn quantite > 0;\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, debtProvider, error: false, message };\n\t\tcase MODIFY_DEBT_CLIENT_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array = state.debtClient.map(debt => {\n\t\t\t\tif (debt._id !== payload.data._id) {\n\t\t\t\t\treturn debt;\n\t\t\t\t}\n\t\t\t\treturn { ...debt, ...payload.data };\n\t\t\t});\n\t\t\tdebtClient = array.filter(({ quantite }) => {\n\t\t\t\treturn quantite > 0;\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, debtClient, error: false, message };\n\t\tcase MODIFY_DEBT_PROVIDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array2 = state.debtProvider.map(debt => {\n\t\t\t\tif (debt._id !== payload.data._id) {\n\t\t\t\t\treturn debt;\n\t\t\t\t}\n\t\t\t\treturn { ...debt, ...payload.data };\n\t\t\t});\n\t\t\tdebtProvider = array2.filter(({ quantite }) => {\n\t\t\t\treturn quantite > 0;\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, debtProvider, error: false, message };\n\n\t\tcase GET_DEBTS_CLIENT_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase GET_DEBTS_PROVIDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase MODIFY_DEBT_CLIENT_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase MODIFY_DEBT_PROVIDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}