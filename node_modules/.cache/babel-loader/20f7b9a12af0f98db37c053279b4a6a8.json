{"ast":null,"code":"import _toConsumableArray from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_DEVOLUTIONS, GET_DEVOLUTIONS_SUCCESS, GET_DEVOLUTIONS_FAIL, CREATE_DEVOLUTION, CREATE_DEVOLUTION_SUCCESS, CREATE_DEVOLUTION_FAIL, DELETE_DEVOLUTION, DELETE_DEVOLUTION_SUCCESS, DELETE_DEVOLUTION_FAIL, MODIFY_DEVOLUTION, MODIFY_DEVOLUTION_SUCCESS, MODIFY_DEVOLUTION_FAIL, VALIDATE_DEVOLUTION, VALIDATE_DEVOLUTION_SUCCESS, VALIDATE_DEVOLUTION_FAIL, GET_DEVOLUTION_ORDER, GET_DEVOLUTION_ORDER_SUCCESS, GET_DEVOLUTION_ORDER_FAIL } from \"../actions/devolution\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\nexport default function devolution() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    devolutions: [],\n    printOrder: {},\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n\n  switch (type) {\n    case GET_DEVOLUTIONS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_DEVOLUTION_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case CREATE_DEVOLUTION:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case MODIFY_DEVOLUTION:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case VALIDATE_DEVOLUTION:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case DELETE_DEVOLUTION:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_DEVOLUTIONS_SUCCESS:\n      message = [].concat(payload.message);\n      var devolutions = sortBy(payload.data, [\"etat\", \"created\"]).reverse();\n      return _objectSpread({}, state, {\n        isFetching: false,\n        devolutions: devolutions,\n        error: false,\n        message: message\n      });\n\n    case GET_DEVOLUTION_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        printOrder: payload.data,\n        error: false,\n        message: message\n      });\n\n    case CREATE_DEVOLUTION_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        devolutions: [payload.data].concat(_toConsumableArray(state.devolutions)),\n        error: false,\n        message: message\n      });\n\n    case MODIFY_DEVOLUTION_SUCCESS:\n      message = [].concat(payload.message);\n      var array = state.devolutions.map(function (devolution) {\n        if (devolution._id !== payload.data._id) {\n          return devolution;\n        }\n\n        return _objectSpread({}, devolution, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        devolutions: array,\n        error: false,\n        message: message\n      });\n\n    case VALIDATE_DEVOLUTION_SUCCESS:\n      message = [].concat(payload.message);\n      var array2 = state.devolutions.map(function (devolution) {\n        if (devolution._id !== payload.data._id) {\n          return devolution;\n        }\n\n        return _objectSpread({}, devolution, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        devolutions: array2,\n        printOrder: payload.data,\n        error: false,\n        message: message\n      });\n\n    case DELETE_DEVOLUTION_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        devolutions: state.devolutions.filter(function (_ref) {\n          var _id = _ref._id;\n          return _id !== payload.data;\n        }),\n        error: false,\n        message: message\n      });\n\n    case GET_DEVOLUTIONS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case GET_DEVOLUTION_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case CREATE_DEVOLUTION_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case MODIFY_DEVOLUTION_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case VALIDATE_DEVOLUTION_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case DELETE_DEVOLUTION_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/sudFront/src/redux/reducers/devolution.js"],"names":["GET_DEVOLUTIONS","GET_DEVOLUTIONS_SUCCESS","GET_DEVOLUTIONS_FAIL","CREATE_DEVOLUTION","CREATE_DEVOLUTION_SUCCESS","CREATE_DEVOLUTION_FAIL","DELETE_DEVOLUTION","DELETE_DEVOLUTION_SUCCESS","DELETE_DEVOLUTION_FAIL","MODIFY_DEVOLUTION","MODIFY_DEVOLUTION_SUCCESS","MODIFY_DEVOLUTION_FAIL","VALIDATE_DEVOLUTION","VALIDATE_DEVOLUTION_SUCCESS","VALIDATE_DEVOLUTION_FAIL","GET_DEVOLUTION_ORDER","GET_DEVOLUTION_ORDER_SUCCESS","GET_DEVOLUTION_ORDER_FAIL","RESET_ERRORS","sortBy","devolution","state","devolutions","printOrder","isFetching","message","error","action","payload","type","concat","data","reverse","array","map","_id","array2","filter"],"mappings":"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","sourcesContent":["import {\n\tGET_DEVOLUTIONS,\n\tGET_DEVOLUTIONS_SUCCESS,\n\tGET_DEVOLUTIONS_FAIL,\n\tCREATE_DEVOLUTION,\n\tCREATE_DEVOLUTION_SUCCESS,\n\tCREATE_DEVOLUTION_FAIL,\n\tDELETE_DEVOLUTION,\n\tDELETE_DEVOLUTION_SUCCESS,\n\tDELETE_DEVOLUTION_FAIL,\n\tMODIFY_DEVOLUTION,\n\tMODIFY_DEVOLUTION_SUCCESS,\n\tMODIFY_DEVOLUTION_FAIL,\n\tVALIDATE_DEVOLUTION,\n\tVALIDATE_DEVOLUTION_SUCCESS,\n\tVALIDATE_DEVOLUTION_FAIL,\n\tGET_DEVOLUTION_ORDER,\n\tGET_DEVOLUTION_ORDER_SUCCESS,\n\tGET_DEVOLUTION_ORDER_FAIL\n} from \"../actions/devolution\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\n\nexport default function devolution(\n\tstate = { devolutions: [], printOrder: {}, isFetching: false, message: [], error: false },\n\taction\n) {\n\tconst { payload, type } = action;\n\tlet message;\n\tswitch (type) {\n\t\tcase GET_DEVOLUTIONS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase GET_DEVOLUTION_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase CREATE_DEVOLUTION:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase MODIFY_DEVOLUTION:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase VALIDATE_DEVOLUTION:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase DELETE_DEVOLUTION:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_DEVOLUTIONS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst devolutions = sortBy(payload.data, [\"etat\", \"created\"]).reverse();\n\t\t\treturn { ...state, isFetching: false, devolutions, error: false, message };\n\t\tcase GET_DEVOLUTION_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, printOrder: payload.data, error: false, message };\n\t\tcase CREATE_DEVOLUTION_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\tdevolutions: [payload.data, ...state.devolutions],\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\t\tcase MODIFY_DEVOLUTION_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array = state.devolutions.map(devolution => {\n\t\t\t\tif (devolution._id !== payload.data._id) {\n\t\t\t\t\treturn devolution;\n\t\t\t\t}\n\t\t\t\treturn { ...devolution, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, devolutions: array, error: false, message };\n\t\tcase VALIDATE_DEVOLUTION_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array2 = state.devolutions.map(devolution => {\n\t\t\t\tif (devolution._id !== payload.data._id) {\n\t\t\t\t\treturn devolution;\n\t\t\t\t}\n\t\t\t\treturn { ...devolution, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, devolutions: array2, printOrder: payload.data, error: false, message };\n\t\tcase DELETE_DEVOLUTION_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\tdevolutions: state.devolutions.filter(({ _id }) => _id !== payload.data),\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\n\t\tcase GET_DEVOLUTIONS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase GET_DEVOLUTION_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase CREATE_DEVOLUTION_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase MODIFY_DEVOLUTION_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase VALIDATE_DEVOLUTION_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase DELETE_DEVOLUTION_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}