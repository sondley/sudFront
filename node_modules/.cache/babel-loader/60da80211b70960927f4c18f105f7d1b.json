{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/grandsud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_TRANSACTIONS, GET_TRANSACTIONS_SUCCESS, GET_TRANSACTIONS_FAIL, GET_COMPTE, GET_COMPTE_SUCCESS, GET_COMPTE_FAIL, OPEN_CAISSE, OPEN_CAISSE_SUCCESS, OPEN_CAISSE_FAIL, CLOSE_CAISSE, CLOSE_CAISSE_SUCCESS, CLOSE_CAISSE_FAIL, GET_COMPTE_STATUS, GET_COMPTE_STATUS_SUCCESS, GET_COMPTE_STATUS_FAIL } from \"../actions/compte\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\nexport default function compte() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    transactions: [],\n    moneyCompte: 0,\n    moneyCoffre: 0,\n    etat: \"0\",\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n\n  switch (type) {\n    //Get Compte Transactions\n    case GET_TRANSACTIONS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_TRANSACTIONS_SUCCESS:\n      message = [].concat(payload.message);\n      var transactions = sortBy(payload.data, [\"created\"]).reverse();\n      return _objectSpread({}, state, {\n        isFetching: false,\n        transactions: transactions,\n        error: false,\n        message: message\n      });\n\n    case GET_TRANSACTIONS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Get Compte Money\n\n    case GET_COMPTE:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_COMPTE_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        moneyCompte: payload.data,\n        error: false,\n        message: message\n      });\n\n    case GET_COMPTE_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Open Caisse\n\n    case OPEN_CAISSE:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case OPEN_CAISSE_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        etat: payload.data.etat,\n        error: false,\n        message: message\n      });\n\n    case OPEN_CAISSE_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n    //Close Caisse\n\n    case CLOSE_CAISSE:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case CLOSE_CAISSE_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        etat: payload.data.etat,\n        error: false,\n        message: message\n      });\n\n    case CLOSE_CAISSE_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n    // Get Compte Status\n\n    case GET_COMPTE_STATUS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_COMPTE_STATUS_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        etat: payload.data.etat,\n        error: false,\n        message: message\n      });\n\n    case GET_COMPTE_STATUS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/reducers/compte.js"],"names":["GET_TRANSACTIONS","GET_TRANSACTIONS_SUCCESS","GET_TRANSACTIONS_FAIL","GET_COMPTE","GET_COMPTE_SUCCESS","GET_COMPTE_FAIL","OPEN_CAISSE","OPEN_CAISSE_SUCCESS","OPEN_CAISSE_FAIL","CLOSE_CAISSE","CLOSE_CAISSE_SUCCESS","CLOSE_CAISSE_FAIL","GET_COMPTE_STATUS","GET_COMPTE_STATUS_SUCCESS","GET_COMPTE_STATUS_FAIL","RESET_ERRORS","sortBy","compte","state","transactions","moneyCompte","moneyCoffre","etat","isFetching","message","error","action","payload","type","concat","data","reverse"],"mappings":"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","sourcesContent":["import {\n\tGET_TRANSACTIONS,\n\tGET_TRANSACTIONS_SUCCESS,\n\tGET_TRANSACTIONS_FAIL,\n\tGET_COMPTE,\n\tGET_COMPTE_SUCCESS,\n\tGET_COMPTE_FAIL,\n\tOPEN_CAISSE,\n\tOPEN_CAISSE_SUCCESS,\n\tOPEN_CAISSE_FAIL,\n\tCLOSE_CAISSE,\n\tCLOSE_CAISSE_SUCCESS,\n\tCLOSE_CAISSE_FAIL,\n\tGET_COMPTE_STATUS,\n\tGET_COMPTE_STATUS_SUCCESS,\n\tGET_COMPTE_STATUS_FAIL\n} from \"../actions/compte\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\n\nexport default function compte(\n\tstate = {\n\t\ttransactions: [],\n\t\tmoneyCompte: 0,\n\t\tmoneyCoffre: 0,\n\t\tetat: \"0\",\n\t\tisFetching: false,\n\t\tmessage: [],\n\t\terror: false\n\t},\n\taction\n) {\n\tconst { payload, type } = action;\n\tlet message;\n\tswitch (type) {\n\t\t//Get Compte Transactions\n\t\tcase GET_TRANSACTIONS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_TRANSACTIONS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst transactions = sortBy(payload.data, [\"created\"]).reverse();\n\t\t\treturn { ...state, isFetching: false, transactions, error: false, message };\n\n\t\tcase GET_TRANSACTIONS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Get Compte Money\n\t\tcase GET_COMPTE:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_COMPTE_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, moneyCompte: payload.data, error: false, message };\n\n\t\tcase GET_COMPTE_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Open Caisse\n\t\tcase OPEN_CAISSE:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase OPEN_CAISSE_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, etat: payload.data.etat, error: false, message };\n\t\tcase OPEN_CAISSE_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\t//Close Caisse\n\t\tcase CLOSE_CAISSE:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase CLOSE_CAISSE_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, etat: payload.data.etat, error: false, message };\n\t\tcase CLOSE_CAISSE_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\t// Get Compte Status\n\t\tcase GET_COMPTE_STATUS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase GET_COMPTE_STATUS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, etat: payload.data.etat, error: false, message };\n\t\tcase GET_COMPTE_STATUS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}