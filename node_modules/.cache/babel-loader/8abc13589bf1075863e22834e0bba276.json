{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_PAYMENTS, GET_PAYMENTS_SUCCESS, GET_PAYMENTS_FAIL, CREATE_PAYMENT, CREATE_PAYMENT_SUCCESS, CREATE_PAYMENT_FAIL } from \"../actions/payment\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\nexport default function payment() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    payments: [],\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n\n  switch (type) {\n    case GET_PAYMENTS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case CREATE_PAYMENT:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_PAYMENTS_SUCCESS:\n      message = [].concat(payload.message);\n      var payments = sortBy(payload.data, [\"etat\"]).reverse();\n      return _objectSpread({}, state, {\n        isFetching: false,\n        payments: payments,\n        error: false,\n        message: message\n      });\n\n    case CREATE_PAYMENT_SUCCESS:\n      message = [].concat(payload.message);\n      var array = state.payments.map(function (payment) {\n        if (payment._id !== payload.data._id) {\n          return payment;\n        }\n\n        return _objectSpread({}, payment, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        payments: array,\n        error: false,\n        message: message\n      });\n\n    case GET_PAYMENTS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case CREATE_PAYMENT_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/sudFront/src/redux/reducers/payment.js"],"names":["GET_PAYMENTS","GET_PAYMENTS_SUCCESS","GET_PAYMENTS_FAIL","CREATE_PAYMENT","CREATE_PAYMENT_SUCCESS","CREATE_PAYMENT_FAIL","RESET_ERRORS","sortBy","payment","state","payments","isFetching","message","error","action","payload","type","concat","data","reverse","array","map","_id"],"mappings":";AAAA,SACCA,YADD,EAECC,oBAFD,EAGCC,iBAHD,EAICC,cAJD,EAKCC,sBALD,EAMCC,mBAND,QAOO,oBAPP;AAQA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,OAAT,GAAiG;AAAA,MAAhFC,KAAgF,uEAAxE;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,UAAU,EAAE,KAA5B;AAAmCC,IAAAA,OAAO,EAAE,EAA5C;AAAgDC,IAAAA,KAAK,EAAE;AAAvD,GAAwE;AAAA,MAARC,MAAQ;AAAA,MACvGC,OADuG,GACrFD,MADqF,CACvGC,OADuG;AAAA,MAC9FC,IAD8F,GACrFF,MADqF,CAC9FE,IAD8F;AAE/G,MAAIJ,OAAJ;;AACA,UAAQI,IAAR;AACC,SAAKhB,YAAL;AACC,+BAAYS,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,IAA/B;AAAqCE,QAAAA,KAAK,EAAE;AAA5C;;AACD,SAAKV,cAAL;AACC,+BAAYM,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,IAA/B;AAAqCE,QAAAA,KAAK,EAAE;AAA5C;;AAED,SAAKZ,oBAAL;AACCW,MAAAA,OAAO,GAAG,GAAGK,MAAH,CAAUF,OAAO,CAACH,OAAlB,CAAV;AACA,UAAMF,QAAQ,GAAGH,MAAM,CAACQ,OAAO,CAACG,IAAT,EAAe,CAAC,MAAD,CAAf,CAAN,CAA+BC,OAA/B,EAAjB;AACA,+BAAYV,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,QAAQ,EAARA,QAAtC;AAAgDG,QAAAA,KAAK,EAAE,KAAvD;AAA8DD,QAAAA,OAAO,EAAPA;AAA9D;;AACD,SAAKR,sBAAL;AACCQ,MAAAA,OAAO,GAAG,GAAGK,MAAH,CAAUF,OAAO,CAACH,OAAlB,CAAV;AACA,UAAMQ,KAAK,GAAGX,KAAK,CAACC,QAAN,CAAeW,GAAf,CAAmB,UAAAb,OAAO,EAAI;AAC3C,YAAIA,OAAO,CAACc,GAAR,KAAgBP,OAAO,CAACG,IAAR,CAAaI,GAAjC,EAAsC;AACrC,iBAAOd,OAAP;AACA;;AACD,iCAAYA,OAAZ,EAAwBO,OAAO,CAACG,IAAhC;AACA,OALa,CAAd;AAMA,+BAAYT,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,QAAQ,EAAEU,KAAhD;AAAuDP,QAAAA,KAAK,EAAE,KAA9D;AAAqED,QAAAA,OAAO,EAAPA;AAArE;;AAED,SAAKV,iBAAL;AACCU,MAAAA,OAAO,GAAG,GAAGK,MAAH,CAAUF,OAAO,CAACH,OAAlB,CAAV;AACA,+BAAYH,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCE,QAAAA,KAAK,EAAE,IAA7C;AAAmDD,QAAAA,OAAO,EAAPA;AAAnD;;AACD,SAAKP,mBAAL;AACCO,MAAAA,OAAO,GAAG,GAAGK,MAAH,CAAUF,OAAO,CAACH,OAAlB,CAAV;AACA,+BAAYH,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCE,QAAAA,KAAK,EAAE,IAA7C;AAAmDD,QAAAA,OAAO,EAAPA;AAAnD;;AAED,SAAKN,YAAL;AACC,+BAAYG,KAAZ;AAAmBI,QAAAA,KAAK,EAAE,KAA1B;AAAiCD,QAAAA,OAAO,EAAE;AAA1C;;AAED;AACC,aAAOH,KAAP;AA/BF;AAiCA","sourcesContent":["import {\n\tGET_PAYMENTS,\n\tGET_PAYMENTS_SUCCESS,\n\tGET_PAYMENTS_FAIL,\n\tCREATE_PAYMENT,\n\tCREATE_PAYMENT_SUCCESS,\n\tCREATE_PAYMENT_FAIL\n} from \"../actions/payment\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\n\nexport default function payment(state = { payments: [], isFetching: false, message: [], error: false }, action) {\n\tconst { payload, type } = action;\n\tlet message;\n\tswitch (type) {\n\t\tcase GET_PAYMENTS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase CREATE_PAYMENT:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_PAYMENTS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst payments = sortBy(payload.data, [\"etat\"]).reverse();\n\t\t\treturn { ...state, isFetching: false, payments, error: false, message };\n\t\tcase CREATE_PAYMENT_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array = state.payments.map(payment => {\n\t\t\t\tif (payment._id !== payload.data._id) {\n\t\t\t\t\treturn payment;\n\t\t\t\t}\n\t\t\t\treturn { ...payment, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, payments: array, error: false, message };\n\n\t\tcase GET_PAYMENTS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase CREATE_PAYMENT_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}