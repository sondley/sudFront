{"ast":null,"code":"import api from \"../../api\";\nexport var GET_ORDERS = \"GET_ORDERS\";\nexport var GET_ORDERS_SUCCESS = \"GET_ORDERS_SUCCESS\";\nexport var GET_ORDERS_FAIL = \"GET_ORDERS_FAIL\";\nexport var CREATE_ORDER = \"CREATE_ORDER\";\nexport var CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\nexport var CREATE_ORDER_FAIL = \"CREATE_ORDER_FAIL\";\nexport var DELETE_ORDER = \"DELETE_ORDER\";\nexport var DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\";\nexport var DELETE_ORDER_FAIL = \"DELETE_ORDER_FAIL\";\nexport var MODIFY_ORDER = \"MODIFY_ORDER\";\nexport var MODIFY_ORDER_SUCCESS = \"MODIFY_ORDER_SUCCESS\";\nexport var MODIFY_ORDER_FAIL = \"MODIFY_ORDER_FAIL\";\n\nfunction requestBegin(type) {\n  return {\n    type: type\n  };\n}\n\nfunction requestSuccess(type, data, message) {\n  return {\n    type: type,\n    payload: {\n      data: data,\n      message: message\n    }\n  };\n}\n\nfunction requestFail(type, message) {\n  return {\n    type: type,\n    payload: {\n      message: message\n    }\n  };\n}\n\nexport function getOrders() {\n  return function (dispatch) {\n    dispatch(requestBegin(GET_ORDERS));\n    return api.requestGET(\"/ordens\").then(function (objResponse) {\n      if (objResponse.data.success) {\n        dispatch(requestSuccess(GET_ORDERS_SUCCESS, objResponse.data.data, objResponse.data.message));\n      } else {\n        dispatch(requestFail(GET_ORDERS_FAIL, objResponse.data.message));\n      }\n    }).catch(function (objError) {\n      dispatch(requestFail(GET_ORDERS_FAIL, objError.response.data.message));\n    });\n  };\n}\nexport function createOrder(order, onClose) {\n  return function (dispatch) {\n    dispatch(requestBegin(CREATE_ORDER));\n    return api.requestPOST(\"/ordens\", {\n      client: order.client,\n      vendeur: order.vendeur,\n      arrayOrden: order.arrayOrden\n    }).then(function (objResponse) {\n      if (objResponse.data.success) {\n        dispatch(requestSuccess(CREATE_ORDER_SUCCESS, objResponse.data.data, objResponse.data.message));\n        onClose();\n      } else {\n        dispatch(requestFail(CREATE_ORDER_FAIL, objResponse.data.message));\n      }\n    }).catch(function (objError) {\n      dispatch(requestFail(CREATE_ORDER, objError.response.data.message));\n    });\n  };\n}\nexport function modifyOrder(order, onClose) {\n  return function (dispatch) {\n    dispatch(requestBegin(MODIFY_ORDER));\n    return api.requestPUT(\"/ordens/\".concat(order._id), {\n      client: order.client,\n      arrayOrden: order.arrayOrden\n    }).then(function (objResponse) {\n      if (objResponse.data.success) {\n        dispatch(requestSuccess(MODIFY_ORDER_SUCCESS, objResponse.data.data, objResponse.data.message));\n        onClose();\n      } else {\n        dispatch(requestFail(MODIFY_ORDER_FAIL, objResponse.data.message));\n      }\n    }).catch(function (objError) {\n      dispatch(requestFail(MODIFY_ORDER_FAIL, objError.response.data.message));\n    });\n  };\n}\nexport function deleteOrder(orderID, onClose) {\n  return function (dispatch) {\n    dispatch(requestBegin(DELETE_ORDER));\n    return api.requestDELETE(\"/ordens/\".concat(orderID)).then(function (objResponse) {\n      if (objResponse.data.success) {\n        dispatch(requestSuccess(DELETE_ORDER_SUCCESS, orderID, objResponse.data.message));\n        onClose();\n      } else {\n        dispatch(requestFail(DELETE_ORDER_FAIL, objResponse.data.message));\n      }\n    }).catch(function (objError) {\n      dispatch(requestFail(DELETE_ORDER_FAIL, objError.response.data.message));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/actions/order.js"],"names":["api","GET_ORDERS","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","CREATE_ORDER","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","DELETE_ORDER","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","MODIFY_ORDER","MODIFY_ORDER_SUCCESS","MODIFY_ORDER_FAIL","requestBegin","type","requestSuccess","data","message","payload","requestFail","getOrders","dispatch","requestGET","then","objResponse","success","catch","objError","response","createOrder","order","onClose","requestPOST","client","vendeur","arrayOrden","modifyOrder","requestPUT","_id","deleteOrder","orderID","requestDELETE"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAEA,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;;AAEP,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC3B,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACA;;AAED,SAASC,cAAT,CAAwBD,IAAxB,EAA8BE,IAA9B,EAAoCC,OAApC,EAA6C;AAC5C,SAAO;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQI,IAAAA,OAAO,EAAE;AAAEF,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR;AAAjB,GAAP;AACA;;AAED,SAASE,WAAT,CAAqBL,IAArB,EAA2BG,OAA3B,EAAoC;AACnC,SAAO;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQI,IAAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAPA;AAAF;AAAjB,GAAP;AACA;;AAED,OAAO,SAASG,SAAT,GAAqB;AAC3B,SAAO,UAAAC,QAAQ,EAAI;AAClBA,IAAAA,QAAQ,CAACR,YAAY,CAACZ,UAAD,CAAb,CAAR;AACA,WAAOD,GAAG,CACRsB,UADK,CACM,SADN,EAELC,IAFK,CAEA,UAAAC,WAAW,EAAI;AACpB,UAAIA,WAAW,CAACR,IAAZ,CAAiBS,OAArB,EAA8B;AAC7BJ,QAAAA,QAAQ,CAACN,cAAc,CAACb,kBAAD,EAAqBsB,WAAW,CAACR,IAAZ,CAAiBA,IAAtC,EAA4CQ,WAAW,CAACR,IAAZ,CAAiBC,OAA7D,CAAf,CAAR;AACA,OAFD,MAEO;AACNI,QAAAA,QAAQ,CAACF,WAAW,CAAChB,eAAD,EAAkBqB,WAAW,CAACR,IAAZ,CAAiBC,OAAnC,CAAZ,CAAR;AACA;AACD,KARK,EASLS,KATK,CASC,UAAAC,QAAQ,EAAI;AAClBN,MAAAA,QAAQ,CAACF,WAAW,CAAChB,eAAD,EAAkBwB,QAAQ,CAACC,QAAT,CAAkBZ,IAAlB,CAAuBC,OAAzC,CAAZ,CAAR;AACA,KAXK,CAAP;AAYA,GAdD;AAeA;AAED,OAAO,SAASY,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AAC3C,SAAO,UAAAV,QAAQ,EAAI;AAClBA,IAAAA,QAAQ,CAACR,YAAY,CAACT,YAAD,CAAb,CAAR;AACA,WAAOJ,GAAG,CACRgC,WADK,CACO,SADP,EACkB;AACvBC,MAAAA,MAAM,EAAEH,KAAK,CAACG,MADS;AAEvBC,MAAAA,OAAO,EAAEJ,KAAK,CAACI,OAFQ;AAGvBC,MAAAA,UAAU,EAAEL,KAAK,CAACK;AAHK,KADlB,EAMLZ,IANK,CAMA,UAAAC,WAAW,EAAI;AACpB,UAAIA,WAAW,CAACR,IAAZ,CAAiBS,OAArB,EAA8B;AAC7BJ,QAAAA,QAAQ,CAACN,cAAc,CAACV,oBAAD,EAAuBmB,WAAW,CAACR,IAAZ,CAAiBA,IAAxC,EAA8CQ,WAAW,CAACR,IAAZ,CAAiBC,OAA/D,CAAf,CAAR;AACAc,QAAAA,OAAO;AACP,OAHD,MAGO;AACNV,QAAAA,QAAQ,CAACF,WAAW,CAACb,iBAAD,EAAoBkB,WAAW,CAACR,IAAZ,CAAiBC,OAArC,CAAZ,CAAR;AACA;AACD,KAbK,EAcLS,KAdK,CAcC,UAAAC,QAAQ,EAAI;AAClBN,MAAAA,QAAQ,CAACF,WAAW,CAACf,YAAD,EAAeuB,QAAQ,CAACC,QAAT,CAAkBZ,IAAlB,CAAuBC,OAAtC,CAAZ,CAAR;AACA,KAhBK,CAAP;AAiBA,GAnBD;AAoBA;AAED,OAAO,SAASmB,WAAT,CAAqBN,KAArB,EAA4BC,OAA5B,EAAqC;AAC3C,SAAO,UAAAV,QAAQ,EAAI;AAClBA,IAAAA,QAAQ,CAACR,YAAY,CAACH,YAAD,CAAb,CAAR;AACA,WAAOV,GAAG,CACRqC,UADK,mBACiBP,KAAK,CAACQ,GADvB,GAC8B;AACnCL,MAAAA,MAAM,EAAEH,KAAK,CAACG,MADqB;AAEnCE,MAAAA,UAAU,EAAEL,KAAK,CAACK;AAFiB,KAD9B,EAKLZ,IALK,CAKA,UAAAC,WAAW,EAAI;AACpB,UAAIA,WAAW,CAACR,IAAZ,CAAiBS,OAArB,EAA8B;AAC7BJ,QAAAA,QAAQ,CAACN,cAAc,CAACJ,oBAAD,EAAuBa,WAAW,CAACR,IAAZ,CAAiBA,IAAxC,EAA8CQ,WAAW,CAACR,IAAZ,CAAiBC,OAA/D,CAAf,CAAR;AACAc,QAAAA,OAAO;AACP,OAHD,MAGO;AACNV,QAAAA,QAAQ,CAACF,WAAW,CAACP,iBAAD,EAAoBY,WAAW,CAACR,IAAZ,CAAiBC,OAArC,CAAZ,CAAR;AACA;AACD,KAZK,EAaLS,KAbK,CAaC,UAAAC,QAAQ,EAAI;AAClBN,MAAAA,QAAQ,CAACF,WAAW,CAACP,iBAAD,EAAoBe,QAAQ,CAACC,QAAT,CAAkBZ,IAAlB,CAAuBC,OAA3C,CAAZ,CAAR;AACA,KAfK,CAAP;AAgBA,GAlBD;AAmBA;AAED,OAAO,SAASsB,WAAT,CAAqBC,OAArB,EAA8BT,OAA9B,EAAuC;AAC7C,SAAO,UAAAV,QAAQ,EAAI;AAClBA,IAAAA,QAAQ,CAACR,YAAY,CAACN,YAAD,CAAb,CAAR;AACA,WAAOP,GAAG,CACRyC,aADK,mBACoBD,OADpB,GAELjB,IAFK,CAEA,UAAAC,WAAW,EAAI;AACpB,UAAIA,WAAW,CAACR,IAAZ,CAAiBS,OAArB,EAA8B;AAC7BJ,QAAAA,QAAQ,CAACN,cAAc,CAACP,oBAAD,EAAuBgC,OAAvB,EAAgChB,WAAW,CAACR,IAAZ,CAAiBC,OAAjD,CAAf,CAAR;AACAc,QAAAA,OAAO;AACP,OAHD,MAGO;AACNV,QAAAA,QAAQ,CAACF,WAAW,CAACV,iBAAD,EAAoBe,WAAW,CAACR,IAAZ,CAAiBC,OAArC,CAAZ,CAAR;AACA;AACD,KATK,EAULS,KAVK,CAUC,UAAAC,QAAQ,EAAI;AAClBN,MAAAA,QAAQ,CAACF,WAAW,CAACV,iBAAD,EAAoBkB,QAAQ,CAACC,QAAT,CAAkBZ,IAAlB,CAAuBC,OAA3C,CAAZ,CAAR;AACA,KAZK,CAAP;AAaA,GAfD;AAgBA","sourcesContent":["import api from \"../../api\";\n\nexport const GET_ORDERS = \"GET_ORDERS\";\nexport const GET_ORDERS_SUCCESS = \"GET_ORDERS_SUCCESS\";\nexport const GET_ORDERS_FAIL = \"GET_ORDERS_FAIL\";\nexport const CREATE_ORDER = \"CREATE_ORDER\";\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\nexport const CREATE_ORDER_FAIL = \"CREATE_ORDER_FAIL\";\nexport const DELETE_ORDER = \"DELETE_ORDER\";\nexport const DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\";\nexport const DELETE_ORDER_FAIL = \"DELETE_ORDER_FAIL\";\nexport const MODIFY_ORDER = \"MODIFY_ORDER\";\nexport const MODIFY_ORDER_SUCCESS = \"MODIFY_ORDER_SUCCESS\";\nexport const MODIFY_ORDER_FAIL = \"MODIFY_ORDER_FAIL\";\n\nfunction requestBegin(type) {\n\treturn { type };\n}\n\nfunction requestSuccess(type, data, message) {\n\treturn { type, payload: { data, message } };\n}\n\nfunction requestFail(type, message) {\n\treturn { type, payload: { message } };\n}\n\nexport function getOrders() {\n\treturn dispatch => {\n\t\tdispatch(requestBegin(GET_ORDERS));\n\t\treturn api\n\t\t\t.requestGET(\"/ordens\")\n\t\t\t.then(objResponse => {\n\t\t\t\tif (objResponse.data.success) {\n\t\t\t\t\tdispatch(requestSuccess(GET_ORDERS_SUCCESS, objResponse.data.data, objResponse.data.message));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(requestFail(GET_ORDERS_FAIL, objResponse.data.message));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(objError => {\n\t\t\t\tdispatch(requestFail(GET_ORDERS_FAIL, objError.response.data.message));\n\t\t\t});\n\t};\n}\n\nexport function createOrder(order, onClose) {\n\treturn dispatch => {\n\t\tdispatch(requestBegin(CREATE_ORDER));\n\t\treturn api\n\t\t\t.requestPOST(\"/ordens\", {\n\t\t\t\tclient: order.client,\n\t\t\t\tvendeur: order.vendeur,\n\t\t\t\tarrayOrden: order.arrayOrden\n\t\t\t})\n\t\t\t.then(objResponse => {\n\t\t\t\tif (objResponse.data.success) {\n\t\t\t\t\tdispatch(requestSuccess(CREATE_ORDER_SUCCESS, objResponse.data.data, objResponse.data.message));\n\t\t\t\t\tonClose();\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(requestFail(CREATE_ORDER_FAIL, objResponse.data.message));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(objError => {\n\t\t\t\tdispatch(requestFail(CREATE_ORDER, objError.response.data.message));\n\t\t\t});\n\t};\n}\n\nexport function modifyOrder(order, onClose) {\n\treturn dispatch => {\n\t\tdispatch(requestBegin(MODIFY_ORDER));\n\t\treturn api\n\t\t\t.requestPUT(`/ordens/${order._id}`, {\n\t\t\t\tclient: order.client,\n\t\t\t\tarrayOrden: order.arrayOrden\n\t\t\t})\n\t\t\t.then(objResponse => {\n\t\t\t\tif (objResponse.data.success) {\n\t\t\t\t\tdispatch(requestSuccess(MODIFY_ORDER_SUCCESS, objResponse.data.data, objResponse.data.message));\n\t\t\t\t\tonClose();\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(requestFail(MODIFY_ORDER_FAIL, objResponse.data.message));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(objError => {\n\t\t\t\tdispatch(requestFail(MODIFY_ORDER_FAIL, objError.response.data.message));\n\t\t\t});\n\t};\n}\n\nexport function deleteOrder(orderID, onClose) {\n\treturn dispatch => {\n\t\tdispatch(requestBegin(DELETE_ORDER));\n\t\treturn api\n\t\t\t.requestDELETE(`/ordens/${orderID}`)\n\t\t\t.then(objResponse => {\n\t\t\t\tif (objResponse.data.success) {\n\t\t\t\t\tdispatch(requestSuccess(DELETE_ORDER_SUCCESS, orderID, objResponse.data.message));\n\t\t\t\t\tonClose();\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(requestFail(DELETE_ORDER_FAIL, objResponse.data.message));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(objError => {\n\t\t\t\tdispatch(requestFail(DELETE_ORDER_FAIL, objError.response.data.message));\n\t\t\t});\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}