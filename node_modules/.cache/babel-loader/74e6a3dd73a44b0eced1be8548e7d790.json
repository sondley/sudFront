{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/grandsud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_CLIENTS, GET_CLIENTS_SUCCESS, GET_CLIENTS_FAIL, CREATE_CLIENT, CREATE_CLIENT_SUCCESS, CREATE_CLIENT_FAIL, MODIFY_CLIENT, MODIFY_CLIENT_SUCCESS, MODIFY_CLIENT_FAIL, DELETE_CLIENT, DELETE_CLIENT_SUCCESS, DELETE_CLIENT_FAIL } from \"../actions/client\";\nexport default function client() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    clients: [],\n    isFetching: false,\n    error: null,\n    message: \"\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CLIENTS:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case CREATE_CLIENT:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case MODIFY_CLIENT:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case DELETE_CLIENT:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case GET_CLIENTS_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        clients: action.payload.client\n      });\n\n    case CREATE_CLIENT_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        clients: state.clients.concat(action.payload.client)\n      });\n\n    case MODIFY_CLIENT_SUCCESS:\n      var array = state.clients.map(function (client) {\n        if (client.id !== action.payload.client.id) {\n          return client;\n        }\n\n        return _objectSpread({}, client, action.payload.client);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        clients: array\n      });\n\n    case DELETE_CLIENT_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        clients: state.clients.filter(function (_ref) {\n          var id = _ref.id;\n          return id !== action.payload.client;\n        })\n      });\n\n    case GET_CLIENTS_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload.message\n      });\n\n    case CREATE_CLIENT_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload.message\n      });\n\n    case MODIFY_CLIENT_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload.message\n      });\n\n    case DELETE_CLIENT_FAIL:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload.message\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/reducers/client.js"],"names":["GET_CLIENTS","GET_CLIENTS_SUCCESS","GET_CLIENTS_FAIL","CREATE_CLIENT","CREATE_CLIENT_SUCCESS","CREATE_CLIENT_FAIL","MODIFY_CLIENT","MODIFY_CLIENT_SUCCESS","MODIFY_CLIENT_FAIL","DELETE_CLIENT","DELETE_CLIENT_SUCCESS","DELETE_CLIENT_FAIL","client","state","clients","isFetching","error","message","action","type","payload","concat","array","map","id","filter"],"mappings":";AAAA,SACEA,WADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,qBALF,EAMEC,kBANF,EAOEC,aAPF,EAQEC,qBARF,EASEC,kBATF,EAUEC,aAVF,EAWEC,qBAXF,EAYEC,kBAZF,QAaO,mBAbP;AAeA,eAAe,SAASC,MAAT,GAGb;AAAA,MAFAC,KAEA,uEAFQ;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,UAAU,EAAE,KAA3B;AAAkCC,IAAAA,KAAK,EAAE,IAAzC;AAA+CC,IAAAA,OAAO,EAAC;AAAvD,GAER;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,WAAL;AACE,+BAAYa,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKZ,aAAL;AACE,+BAAYU,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKT,aAAL;AACE,+BAAYO,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKN,aAAL;AACE,+BAAYI,KAAZ;AAAmBE,QAAAA,UAAU,EAAE;AAA/B;;AAEF,SAAKd,mBAAL;AACE,+BAAYY,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAeR;AAA9D;;AACF,SAAKR,qBAAL;AACE,+BAAYS,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcO,MAAd,CAAqBH,MAAM,CAACE,OAAP,CAAeR,MAApC;AAA/C;;AACF,SAAKL,qBAAL;AACE,UAAMe,KAAK,GAAGT,KAAK,CAACC,OAAN,CAAcS,GAAd,CAAkB,UAAAX,MAAM,EAAI;AACxC,YAAIA,MAAM,CAACY,EAAP,KAAcN,MAAM,CAACE,OAAP,CAAeR,MAAf,CAAsBY,EAAxC,EAA4C;AAC1C,iBAAOZ,MAAP;AACD;;AACD,iCAAYA,MAAZ,EAAuBM,MAAM,CAACE,OAAP,CAAeR,MAAtC;AACD,OALa,CAAd;AAMA,+BAAYC,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,OAAO,EAAEQ;AAA/C;;AACF,SAAKZ,qBAAL;AACE,+BAAYG,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCD,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcW,MAAd,CAAqB;AAAA,cAAGD,EAAH,QAAGA,EAAH;AAAA,iBAAYA,EAAE,KAAKN,MAAM,CAACE,OAAP,CAAeR,MAAlC;AAAA,SAArB;AAA/C;;AAEF,SAAKV,gBAAL;AACE,+BAAYW,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeH;AAA5D;;AACF,SAAKZ,kBAAL;AACE,+BAAYQ,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeH;AAA5D;;AACF,SAAKT,kBAAL;AACE,+BAAYK,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeH;AAA5D;;AACF,SAAKN,kBAAL;AACE,+BAAYE,KAAZ;AAAmBE,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAAP,CAAeH;AAA5D;;AAEF;AACE,aAAOJ,KAAP;AAnCJ;AAqCD","sourcesContent":["import {\n  GET_CLIENTS,\n  GET_CLIENTS_SUCCESS,\n  GET_CLIENTS_FAIL,\n  CREATE_CLIENT,\n  CREATE_CLIENT_SUCCESS,\n  CREATE_CLIENT_FAIL,\n  MODIFY_CLIENT,\n  MODIFY_CLIENT_SUCCESS,\n  MODIFY_CLIENT_FAIL,\n  DELETE_CLIENT,\n  DELETE_CLIENT_SUCCESS,\n  DELETE_CLIENT_FAIL\n} from \"../actions/client\";\n\nexport default function client(\n  state = { clients: [], isFetching: false, error: null, message:\"\" },\n  action\n) {\n  switch (action.type) {\n    case GET_CLIENTS:\n      return { ...state, isFetching: true };\n    case CREATE_CLIENT:\n      return { ...state, isFetching: true };\n    case MODIFY_CLIENT:\n      return { ...state, isFetching: true };\n    case DELETE_CLIENT:\n      return { ...state, isFetching: true };\n\n    case GET_CLIENTS_SUCCESS:\n      return { ...state, isFetching: false, clients: action.payload.client };\n    case CREATE_CLIENT_SUCCESS:\n      return { ...state, isFetching: false, clients: state.clients.concat(action.payload.client) };\n    case MODIFY_CLIENT_SUCCESS:\n      const array = state.clients.map(client => {\n        if (client.id !== action.payload.client.id) {\n          return client;\n        }\n        return { ...client, ...action.payload.client };\n      });\n      return { ...state, isFetching: false, clients: array };\n    case DELETE_CLIENT_SUCCESS:\n      return { ...state, isFetching: false, clients: state.clients.filter(({ id }) => id !== action.payload.client) };\n\n    case GET_CLIENTS_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message };\n    case CREATE_CLIENT_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message };\n    case MODIFY_CLIENT_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message };\n    case DELETE_CLIENT_FAIL:\n      return { ...state, isFetching: false, error: action.payload.message };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}