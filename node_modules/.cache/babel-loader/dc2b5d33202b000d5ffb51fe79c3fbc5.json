{"ast":null,"code":"import _toConsumableArray from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/sudFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_ORDERS, GET_ORDERS_SUCCESS, GET_ORDERS_FAIL, CREATE_ORDER, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, DELETE_ORDER, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, MODIFY_ORDER, MODIFY_ORDER_SUCCESS, MODIFY_ORDER_FAIL, VALIDATE_ORDER, VALIDATE_ORDER_SUCCESS, VALIDATE_ORDER_FAIL } from \"../actions/order\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\nexport default function order() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    orders: [],\n    printOrder: {},\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n\n  switch (type) {\n    case GET_ORDERS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case CREATE_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case MODIFY_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case VALIDATE_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case DELETE_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_ORDERS_SUCCESS:\n      message = [].concat(payload.message);\n      var orders = sortBy(payload.data, [\"etat\", \"created\"]).reverse();\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: orders,\n        error: false,\n        message: message\n      });\n\n    case CREATE_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: [payload.data].concat(_toConsumableArray(state.orders)),\n        error: false,\n        message: message\n      });\n\n    case MODIFY_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      var array = state.orders.map(function (order) {\n        if (order._id !== payload.data._id) {\n          return order;\n        }\n\n        return _objectSpread({}, order, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: array,\n        error: false,\n        message: message\n      });\n\n    case VALIDATE_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      var array2 = state.orders.map(function (order) {\n        if (order._id !== payload.data._id) {\n          return order;\n        }\n\n        return _objectSpread({}, order, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: array2,\n        printOrder: payload.data,\n        error: false,\n        message: message\n      });\n\n    case DELETE_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: state.orders.filter(function (_ref) {\n          var _id = _ref._id;\n          return _id !== payload.data;\n        }),\n        error: false,\n        message: message\n      });\n\n    case GET_ORDERS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case CREATE_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case MODIFY_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case VALIDATE_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case DELETE_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/sudFront/src/redux/reducers/order.js"],"names":["GET_ORDERS","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","CREATE_ORDER","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","DELETE_ORDER","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","MODIFY_ORDER","MODIFY_ORDER_SUCCESS","MODIFY_ORDER_FAIL","VALIDATE_ORDER","VALIDATE_ORDER_SUCCESS","VALIDATE_ORDER_FAIL","RESET_ERRORS","sortBy","order","state","orders","printOrder","isFetching","message","error","action","payload","type","concat","data","reverse","array","map","_id","array2","filter"],"mappings":"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","sourcesContent":["import {\n\tGET_ORDERS,\n\tGET_ORDERS_SUCCESS,\n\tGET_ORDERS_FAIL,\n\tCREATE_ORDER,\n\tCREATE_ORDER_SUCCESS,\n\tCREATE_ORDER_FAIL,\n\tDELETE_ORDER,\n\tDELETE_ORDER_SUCCESS,\n\tDELETE_ORDER_FAIL,\n\tMODIFY_ORDER,\n\tMODIFY_ORDER_SUCCESS,\n\tMODIFY_ORDER_FAIL,\n\tVALIDATE_ORDER,\n\tVALIDATE_ORDER_SUCCESS,\n\tVALIDATE_ORDER_FAIL\n} from \"../actions/order\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nimport { sortBy } from \"lodash\";\n\nexport default function order(\n\tstate = { orders: [], printOrder: {}, isFetching: false, message: [], error: false },\n\taction\n) {\n\tconst { payload, type } = action;\n\tlet message;\n\tswitch (type) {\n\t\tcase GET_ORDERS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase CREATE_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase MODIFY_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase VALIDATE_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase DELETE_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_ORDERS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst orders = sortBy(payload.data, [\"etat\", \"created\"]).reverse();\n\t\t\treturn { ...state, isFetching: false, orders, error: false, message };\n\t\tcase CREATE_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\torders: [payload.data, ...state.orders],\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\t\tcase MODIFY_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array = state.orders.map(order => {\n\t\t\t\tif (order._id !== payload.data._id) {\n\t\t\t\t\treturn order;\n\t\t\t\t}\n\t\t\t\treturn { ...order, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, orders: array, error: false, message };\n\t\tcase VALIDATE_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array2 = state.orders.map(order => {\n\t\t\t\tif (order._id !== payload.data._id) {\n\t\t\t\t\treturn order;\n\t\t\t\t}\n\t\t\t\treturn { ...order, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, orders: array2, printOrder: payload.data, error: false, message };\n\t\tcase DELETE_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\torders: state.orders.filter(({ _id }) => _id !== payload.data),\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\n\t\tcase GET_ORDERS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase CREATE_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase MODIFY_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase VALIDATE_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase DELETE_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}