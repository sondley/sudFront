{"ast":null,"code":"import _objectSpread from \"/Users/sondley/Desktop/PapaRohenson/grandsud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { GET_ORDERS, GET_ORDERS_SUCCESS, GET_ORDERS_FAIL, CREATE_ORDER, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, DELETE_ORDER, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, MODIFY_ORDER, MODIFY_ORDER_SUCCESS, MODIFY_ORDER_FAIL } from \"../actions/order\";\nimport { RESET_ERRORS } from \"../actions/utils\";\nexport default function order() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    orders: [],\n    isFetching: false,\n    message: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n  var message;\n\n  switch (type) {\n    case GET_ORDERS:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case CREATE_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case MODIFY_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case DELETE_ORDER:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: false\n      });\n\n    case GET_ORDERS_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: payload.data,\n        error: false,\n        message: message\n      });\n\n    case CREATE_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: state.orders.concat(payload.data),\n        error: false,\n        message: message\n      });\n\n    case MODIFY_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      var array = state.orders.map(function (order) {\n        if (order._id !== payload.data._id) {\n          return order;\n        }\n\n        return _objectSpread({}, order, payload.data);\n      });\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: array,\n        error: false,\n        message: message\n      });\n\n    case DELETE_ORDER_SUCCESS:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        orders: state.orders.filter(function (_ref) {\n          var _id = _ref._id;\n          return _id !== payload.data;\n        }),\n        error: false,\n        message: message\n      });\n\n    case GET_ORDERS_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case CREATE_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case MODIFY_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case DELETE_ORDER_FAIL:\n      message = [].concat(payload.message);\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: true,\n        message: message\n      });\n\n    case RESET_ERRORS:\n      return _objectSpread({}, state, {\n        error: false,\n        message: []\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sondley/Desktop/PapaRohenson/grandsud/src/redux/reducers/order.js"],"names":["GET_ORDERS","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","CREATE_ORDER","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","DELETE_ORDER","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","MODIFY_ORDER","MODIFY_ORDER_SUCCESS","MODIFY_ORDER_FAIL","RESET_ERRORS","order","state","orders","isFetching","message","error","action","payload","type","concat","data","array","map","_id","filter"],"mappings":"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","sourcesContent":["import {\n\tGET_ORDERS,\n\tGET_ORDERS_SUCCESS,\n\tGET_ORDERS_FAIL,\n\tCREATE_ORDER,\n\tCREATE_ORDER_SUCCESS,\n\tCREATE_ORDER_FAIL,\n\tDELETE_ORDER,\n\tDELETE_ORDER_SUCCESS,\n\tDELETE_ORDER_FAIL,\n\tMODIFY_ORDER,\n\tMODIFY_ORDER_SUCCESS,\n\tMODIFY_ORDER_FAIL\n} from \"../actions/order\";\nimport { RESET_ERRORS } from \"../actions/utils\";\n\nexport default function order(state = { orders: [], isFetching: false, message: [], error: false }, action) {\n\tconst { payload, type } = action;\n\tlet message;\n\tswitch (type) {\n\t\tcase GET_ORDERS:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase CREATE_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase MODIFY_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\t\tcase DELETE_ORDER:\n\t\t\treturn { ...state, isFetching: true, error: false };\n\n\t\tcase GET_ORDERS_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, orders: payload.data, error: false, message };\n\t\tcase CREATE_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\torders: state.orders.concat(payload.data),\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\t\tcase MODIFY_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\tconst array = state.orders.map(order => {\n\t\t\t\tif (order._id !== payload.data._id) {\n\t\t\t\t\treturn order;\n\t\t\t\t}\n\t\t\t\treturn { ...order, ...payload.data };\n\t\t\t});\n\t\t\treturn { ...state, isFetching: false, orders: array, error: false, message };\n\t\tcase DELETE_ORDER_SUCCESS:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\torders: state.orders.filter(({ _id }) => _id !== payload.data),\n\t\t\t\terror: false,\n\t\t\t\tmessage\n\t\t\t};\n\n\t\tcase GET_ORDERS_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase CREATE_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase MODIFY_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\t\tcase DELETE_ORDER_FAIL:\n\t\t\tmessage = [].concat(payload.message);\n\t\t\treturn { ...state, isFetching: false, error: true, message };\n\n\t\tcase RESET_ERRORS:\n\t\t\treturn { ...state, error: false, message: [] };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}