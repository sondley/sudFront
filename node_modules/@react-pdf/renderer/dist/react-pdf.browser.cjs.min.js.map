{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/utils/warning.js","../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/deepMerge.js","../src/utils/isFunction.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/hyphenation.js","../src/font/standard.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/index.js","../src/utils/url.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\n\nexport const processFontWeight = value => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key, value)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","import { isNil, mergeDeepWith } from 'ramda';\n\nconst merge = (a, b) => {\n  return isNil(b) ? a : b;\n};\n\nconst deepMerge = objs =>\n  objs.reduce((acc, obj) => {\n    return mergeDeepWith(merge, acc, obj);\n  }, {});\n\nexport default deepMerge;\n","import { compose, equals, type } from 'ramda';\n\nconst isFunction = compose(\n  equals('Function'),\n  type,\n);\n\nexport default isFunction;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import { pick, toPairsIn } from 'ramda';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport deepMerge from '../utils/deepMerge';\nimport upperFirst from '../utils/upperFirst';\nimport isFunction from '../utils/isFunction';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    ]);\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    ]);\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(inheritedProperties, this.parent.style)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  update(newProps) {\n    super.update(newProps);\n    this._size = null;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor, doc) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import { pathOr, last } from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = pathOr(12, ['attributes', 'fontSize']);\n\nconst getFallbackFont = () => {\n  return getOrCreateFont('Helvetica');\n};\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst shouldFallbackToFont = (codePoint, font) => {\n  return (\n    !IGNORED_CODE_POINTS.includes(codePoint) &&\n    !font.hasGlyphForCodePoint(codePoint) &&\n    getFallbackFont().hasGlyphForCodePoint(codePoint)\n  );\n};\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport fontSubstitution from './fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nexport default engine;\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { isNil, propEq, prop, complement, compose } from 'ramda';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst isImage = propEq('name', 'Image');\n\nconst isTextInstance = compose(\n  complement(isNil),\n  prop('value'),\n);\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance));\n};\n","import Yoga from 'yoga-layout';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Base from './Base';\nimport Font from '../font';\nimport layout from '../layout';\nimport { getURL } from '../utils/url';\nimport { getAttributedString } from '../utils/attributedString';\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.blocks = null;\n    this.computed = false;\n    this.attributedString = null;\n    this.layoutOptions = {\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n      shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n    };\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.blocks) return [];\n\n    return this.blocks\n      .reduce((acc, block) => [...acc, ...block], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.blocks) return -1;\n    return this.lines.reduce((acc, line) => acc + line.box.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.blocks) return -1;\n    return Math.max(\n      ...this.lines.map(line => AttributedString.advanceWidth(line)),\n    );\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.box.height > height) return i;\n      counter += line.box.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.box.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.blocks || this.props.render) {\n      // Do the actual text layout.\n      /// If height null or NaN, we take some liberty on layout height\n      const container = {\n        x: 0,\n        y: 0,\n        width,\n        height: height || Infinity,\n        maxLines: this.style.maxLines,\n        truncateMode: this.style.textOverflow,\n      };\n      this.blocks = layout(\n        this.attributedString,\n        container,\n        this.layoutOptions,\n      );\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.blocks.reduce((acc, b) => acc + b.length, 0);\n\n    this.end = linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width, height);\n\n      return { height: this.linesHeight };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.blocks && !this.props.render) {\n      text.blocks = [...this.blocks];\n    }\n\n    return text;\n  }\n\n  renderText() {\n    const { top, left } = this.getAbsoluteLayout();\n    const initialY = this.lines[0] ? this.lines[0].box.y : 0;\n\n    // We translate lines based on Yoga container\n    this.root.instance.save();\n    this.root.instance.translate(\n      left + this.padding.left,\n      top + this.padding.top - initialY,\n    );\n\n    // Perform actual text rendering on document\n    PDFRenderer.render(this.root.instance, [this.lines]);\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    this.renderText();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport warning from '../src/utils/warning';\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        console.error(error);\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["printWarning","format","args","argIndex","message","replace","console","error","Error","x","__DEV__","process","env","NODE_ENV","warning","condition","undefined","Root","isDirty","document","instance","appendChild","child","removeChild","markDirty","render","PDFDocument","autoFirstPage","this","upperFirst","value","charAt","toUpperCase","slice","isPercent","exec","matchPercent","match","parseFloat","percent","absValue","Math","abs","absPercent","Node","parent","children","computed","layout","Yoga","createDefault","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","result","scalar","isBorderStyle","key","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","matchObjectPosition","processObjectPosition","isTransformOriginStyle","matchTransformOrigin","transformOffsetKeywords","processTransformOrigin","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandStyles","style","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","transformStyles","expandedStyles","resolved","create","styles","flatten","input","Array","isArray","reduce","acc","s","forEach","resolveMediaQueries","container","test","matchMedia","resolve","absoluteFillObject","position","hairlineWidth","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","drawBorders","rtr","min","rtl","rbr","rbl","strokeOpacity","clipBorderTop","fillBorderTop","clipBorderRight","fillBorderRight","clipBorderBottom","fillBorderBottom","clipBorderLeft","fillBorderLeft","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","strokeColor","lineWidth","dash","space","undash","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","topLeftCoordX","bottomLeftXCoord","Clipping","ctr","cbr","cbl","ctl","getRotation","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","rotate","scale","translate","Transformations","applyTransformations","re","merge","a","b","isNil","deepMerge","objs","obj","mergeDeepWith","isFunction","compose","equals","type","inheritedProperties","Base","props","_this","constructor","defaultProps","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","_this2","applyStyle","page","size","orientation","ownStyles","StyleSheet","inheritedStyles","pick","setter","getLayoutData","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","renderChildren","wrap","break","fixed","minPresenceAhead","percentX","percentY","assign","Borders","Transform","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","addDynamicChild","elements","Fragment","createInstance","renderDynamicNodes","cb","listToExplore","shift","nodeWillWrap","addPage","View","emojiSource","hyphenationCallback","fetchFont","src","options","fetch","response","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","res","styleSources","filter","exactFit","find","leftOffset","rightOffset","lt","gt","registerEmojiSource","url","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","fonts","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","standardFonts","includes","doc","reset","clear","emoji","hyphenation","StandardFont","PDFFont","str","encode","encoded","positions","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getFallbackFont","getOrCreateFont","shouldFallbackToFont","fontSubstitution","string","runs","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","unitsPerEm","last","engines","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","engine","layoutEngine","PROTOCOL_REGEXP","getURL","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","createCache","limit","cache","get","set","IMAGE_CACHE","getAbsoluteLocalPath","isDangerousLocalPath","filename","safePath","fetchLocalFile","allowDangerousPaths","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","getImage","extension","resolveBase64Image","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","image","cacheKey","toString","emojis","regex","emojiRegex","reflect","promise","then","v","makeFetchEmojiImage","_removeNoColor","getCodePoints","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","emojiSize","chunk","String","fromCharCode","attachment","yOffset","floor","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","capitalize","l","isImage","propEq","isTextInstance","complement","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","fromFragments","Text","blocks","attributedString","layoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","lines","line","box","heightAtLineIndex","layoutText","y","Infinity","maxLines","truncateMode","textOverflow","linesCount","widthMode","heightMode","MEASURE_MODE_EXACTLY","linesHeight","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","renderText","initialY","PDFRenderer","href","block","Link","Note","note","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","flexGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","ratio","MEASURE_MODE_AT_MOST","warn","_context","renderImage","objectFit","source","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","childNode","all","loadEmojis","loadImages","loadAssets","wrapPages","pageCount","pages","wrapArea","renderPages","j","pageNumber","totalPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","oldPropsKeys","newPropsKeys","emptyObject","shouldReplaceLink","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","insertBefore","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","stream","pipe","BlobStream","on","blob","toBlob","toBuffer","flatStyles","stylesArray","React","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","innerRef","ref","PDFDownloadLink","fileName","download","onClick","window","navigator","msSaveBlob","version"],"mappings":"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"}